// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum RoleName {
  EXAMINATION_OFFICER
  LECTURE
  STUDENT
  APPLICANT
}

enum ApplicantStatusName {
  UNDER_REVIEW //The application is currently being reviewed by the admissions team.
  ACCEPTED //The application has been approved. The applicant can now proceed to enrollment.
  REJECTED //The application has not been approved. The applicant will not be able to enroll.
  DRAFT
}

enum ProgrammeTypeName {
  FULL_TIME
  PART_TIME
}

enum ProgrammeLevelName {
  DIPLOMA
  CERTIFICATE
  BACHELOR
  MASTERS
  PHD
}

enum ORIGIN {
  NECTA
  FOREIGN
  NECTA1988
}

enum PaymentStatus {
  PENDING
  SUCCESS
  FAILED
  CANCELLED
}

enum EducationLevelName {
  FORM_IV
  FORM_VI
  VETA_NVA_III
  NTA_LEVEL_IV
  NTA_LEVEL_V
  DIPLOMA
  DEGREE
  MASTERS
}

//USERS

model Applicant {
  username              String              @id @map("_id")
  hashedPassword        String
  role                  RoleName            @default(APPLICANT)
  applicationStatus     ApplicantStatusName @default(DRAFT)
  programmes            String[]            @db.ObjectId
  educationBackground   String[]            @db.ObjectId
  formIVIndex           String
  controlNumber         Int?
  applicationType       ProgrammeLevelName
  origin                ORIGIN
  highestEducationLevel EducationLevelName
}

//USERS

//APPLICANT DATA
// FIXME: ADD University application ID to check the application period
model ApplicantNotification {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  applicantUsername String
  title             String // Title of the notification
  message           String // The actual notification message
  read              Boolean // Whether the notification has been read
  timestamp         DateTime // When the notification was created
}

model ApplicantProgrammes {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  applicantUsername String
  programmeCode     String
  priority          Int
}

model ApplicantEducationBackground {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  applicantUsername String
  position          Int
  level             String
  schoolName        String
  startYear         String
  endYear           String
}

model ApplicantProfile {
  applicantUsername String  @id @map("_id")
  nida              String  @default("")
  firstName         String  @default("")
  middleName        String  @default("")
  lastName          String  @default("")
  nationality       String  @default("")
  gender            String  @default("")
  imageUrl          String?
}

model ApplicantContacts {
  applicantUsername      String  @id @map("_id")
  phone                  String  @default("")
  email                  String? @default("")
  alternativeEmail       String? @default("")
  alternativePhoneNumber String? @default("")
  streetAddress          String  @default("")
  city                   String  @default("")
  region                 String  @default("")
  postalCode             String  @default("")
  country                String  @default("")
}

model ApplicantEmergencyContacts {
  applicantUsername      String  @id @map("_id")
  fullName               String  @default("")
  phone                  String  @default("")
  email                  String? @default("")
  alternativeEmail       String? @default("")
  alternativePhoneNumber String? @default("")
  streetAddress          String  @default("")
  city                   String  @default("")
  region                 String  @default("")
  postalCode             String  @default("")
  country                String  @default("")
  relation               String  @default("")
}

model ApplicationPayment {
  controlNumber     Int           @id @map("_id")
  applicantUsername String
  status            PaymentStatus @default(PENDING)
}

//APPLICANT DATA

//UNIVERSITY HIERARCHY

model Campus {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  location  String
  shortHand String
  country   String
}

model College {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  campusId String @db.ObjectId
}

model Department {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  name      String @unique
  collegeId String @db.ObjectId
}

model Programme {
  code                String             @id @map("_id")
  name                String
  level               ProgrammeLevelName
  duration            Int
  type                ProgrammeTypeName
  language            String
  departmentId        String             @db.ObjectId
  tuitionFee          Float
  applicationFee      Float
  qualification       String
  applicationDeadline String
  availability        Boolean            @default(true)
}

//UNIVERSITY HIERARCHY

//UNIVERSITY ANUAL EVENTS

model AcademicYear {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime
  name      String   @unique
}

model UniversityApplication {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  academicYearId String @db.ObjectId

  startTime DateTime // Start time of the application
  endTime   DateTime // End time of the application
}

//UNIVERSITY ANUAL EVENTS
